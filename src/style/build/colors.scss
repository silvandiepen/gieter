@use "sass:map";
@use "sass:math";

@function brightness($color) {
  $red: red($color);
  $green: green($color);
  $blue: blue($color);
  @return abs(math.div(($red + $red + $blue + $green + $green + $green), 6));
}

@function text-contrast($color) {
  @if brightness($color) > 120 {
    @return hsl(hue($color), saturation($color), 10%);
  } @else {
    @return hsl(hue($color), saturation($color), 90%);
  }
}

@mixin create-colors($name, $value) {
  --#{$name}-h: #{hue($value)};
  --#{$name}-s: #{saturation($value)};
  --#{$name}-l: #{lightness($value)};
  --#{$name}-r: #{red($value)};
  --#{$name}-g: #{green($value)};
  --#{$name}-b: #{blue($value)};
  --#{$name}: hsl(
    var(--#{$name}-hue, #{hue($value)}),
    var(--#{$name}-saturation, #{saturation($value)}),
    var(--#{$name}-lightness, #{lightness($value)})
  );
  --#{$name}-text: #{text-contrast($value)};
}

@mixin create-shades(
  $name,
  $value,
  $background,
  $shades: (5, 10, 25, 50, 75, 90, 95)
) {
  @each $shade in $shades {
    $color: mix($value, $background, math.percentage(math.div($shade,100)));
    --#{$name}-#{$shade}: #{$color};
  }
}

:root {
  @each $name, $value in $theme-colors {
    @include create-colors($name, $value);
  }
}

@mixin darkModeColors {
  @include create-colors("background", map.get($theme-colors, "dark"));
  @include create-colors("foreground", map.get($theme-colors, "light"));
  @include create-shades(
    "background",
    map.get($theme-colors, "dark"),
    map.get($theme-colors, "light")
  );
  @include create-shades(
    "foreground",
    map.get($theme-colors, "light"),
    map.get($theme-colors, "dark")
  );

  @each $name, $value in $theme-colors {
    @include create-shades($name, $value, map.get($theme-colors, "dark"));
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    @include darkModeColors();
  }
}
body[color-mode="dark"] {
  @include darkModeColors();
}

@mixin lightModeColors {
  @include create-colors("foreground", map.get($theme-colors, "dark"));
  @include create-colors("background", map.get($theme-colors, "light"));
  @include create-shades(
    "foreground",
    map.get($theme-colors, "dark"),
    map.get($theme-colors, "light")
  );
  @include create-shades(
    "background",
    map.get($theme-colors, "light"),
    map.get($theme-colors, "dark")
  );
  @each $name, $value in $theme-colors {
    @include create-shades($name, $value, map.get($theme-colors, "light"));
  }
}

@media (prefers-color-scheme: light) {
  :root {
    @include lightModeColors();
  }
}
body[color-mode="light"] {
  @include lightModeColors();
}
