@use "sass:math";

@mixin content-paragraph() {
  $parent: get-setting("define.content.class");

  #{$parent} {
    p {

          font-size: baseSize;
          line-height: 1.5;
          max-width: v("content.paragraph.max-width");
        
    

      &:first-of-type {
            font-size: 1.25em;
      
      }
    }
  }
}

@mixin content-image() {
  $parent: get-setting("define.content.class");
  #{$parent} {
    img {
    
          max-width: 100%;
          width: 100vw;
          max-height: 80vh;
          margin: auto;

    }
  }
}

@mixin content-blockquote() {
  $parent: get-setting("define.content.class");

  #{$parent} {
    blockquote {
          font-family: inherit;
          font-size: v(baseSize);
          line-height: 1.5;
          padding: space;
       
    }
  }
}
@mixin content-links() {
  $parent: get-setting("define.content.class");

  #{$parent} {
    a:not([class]) {
      position: relative;
      color: v(secondary);
      display: inline-block;
      &:focus {
        outline: none;
      }
      &::before {
        content: "";

            content: "";
            width: calc(100% + 1em);
            height: calc(100% + 1em);
            left: -0.5em;
            top: -0.5em;
            position: absolute;
            border-radius: v(borderRadius);

      }
      &:focus::before {

            outline: 2px solid currentColor;
      }
    }
  }
}

@mixin content-adaptive-svg() {
  $parent: get-setting("define.content.class");
  #{$parent} svg {
    path,
    rect,
    polygon,
    line,
    polyline,
    ellipse,
    circle {
      &:not([class]):not([style]):not([fill]) {
        fill: currentColor;
      }
    }
  }
}
@mixin content-definition-list() {
  $parent: get-setting("define.content.class");
  #{$parent} {
    dl {
      display: flex;
      flex-direction: column;
    }
    dl dd + dt {
      margin-top: 1em;
    }
    dl dt,
    dl dd {
      line-height: 1.5;
    }

    dl dd {
      opacity: 0.5;
    }
    dl dt {
      font-weight: bold;
    }
    dl dt + dd {
      margin-top: 0.5em;
    }
  }
}

@mixin content-lists() {
  $parent: get-setting("define.content.class");
  #{$parent} {
    ul:not([class]),
    ol:not([class]) {
      & + ol,
      & + ul {
        margin-top: 1em;
      }
      ul:not([class]),
      ol:not([class]) {
        padding-left: 1em;
      }
      li {
        line-height: 1.5em;
        font-size: 1em;
        &::before {
          padding-right: 0.5em;
        }
        & + li {
          margin-top: 0.5em;
        }
      }
    }
    ul:not([class]) {
      > li {
        &::before {
          content: "\2014";
        }
      }
    }
    ol:not([class]) {
      counter-reset: list;
      ol {
        counter-reset: sublist;
        > li {
          counter-increment: sublist;
          &::before {
            content: counter(list) "." counter(sublist) ".";
          }
          > ol {
            counter-reset: subsublist;
            > li {
              counter-increment: subsublist;
              &::before {
                content: counter(list) "." counter(sublist) "."
                  counter(subsublist) ".";
              }
            }
          }
        }
      }
      > li {
        counter-increment: list;
        &::before {
          font-variant-numeric: tabular-nums;
          content: counter(list) ".";
        }
      }
    }
  }
}

@mixin content-color-preview() {
  $parent: get-setting("define.color-preview.class");
  #{$parent} {
    &::after {
      content: "";
      width: 1em;
      height: 1em;
      background-color: var(--color-preview);
      display: inline-block;
      border-radius: 50%;
      margin-left: 0.5em;
    }
  }
}

@mixin content-table() {
  $parent: get-setting("define.content.class");
  #{$parent} {
    table {
      width: calc(100% + 1em);
      margin-left: -0.5em;
      color: currentColor;
      border-collapse: collapse;

      &.middle {
        th,
        td {
          vertical-align: middle;
        }
      }
      th,
      td {
        vertical-align: top;
        text-align: left;
        padding: 1em 0.5em;
      }
      th {
        font-weight: v(text-bold, bold);
      }
      thead tr,
      tbody tr:last-child {
        border-bottom: 1px solid v(foreground-10);
      }
      tr + tr {
        border-top: 1px solid v(foreground-10);
      }
      @media #{breakpoint(small,only)} {
        &.wrap {
          thead {
            display: none;
          }
          tr {
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            td {
              display: block;
            }
            td::before {
              width: 33.33%;
              display: block;
              color: v(foreground-50);
              font-size: 0.875em;
              line-height: 1.5;
              content: attr(data-label);
            }
          }
        }
      }
    }
  }
}
